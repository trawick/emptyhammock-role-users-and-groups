---
- name: create admin group
  group: name=admin state=present system=yes

- name: ensure that dev users are present
  user: name={{ item.name }} shell=/bin/bash groups=admin append=yes
  with_items: "{{ users }}"

- name: add ssh key for dev users
  authorized_key: user={{ item.0.name }} key="{{ item.1 }}"
  with_subelements:
    - "{{ users }}"
    - public_key

- name: allow admin group users to sudo
  copy: src=admin dest=/etc/sudoers.d/admin owner=root mode=0440

- name: Create project user
  user: name={{ project_user }} comment="{{ project_name }} user" createhome=yes state=present

- name: Fix permissions of project user home dir if needed (accessed by remote_manage.sh)
  file:
    path: "/home/{{ project_user }}"
    state: touch
    mode: 0755

- name: Add the logging group
  group: name={{ log_group }} state=present
  when: log_group is defined

- name: Add managing user to logging group
  user: name={{ project_user }} groups={{log_group}} append=yes
  when: log_group is defined

- name: Add daemon user to logging group
  user: name={{ log_dir_owner }} groups={{log_group}} append=yes
  when: log_dir_owner is defined

- name: Don't allow root to log in via ssh
  lineinfile:
    dest=/etc/ssh/sshd_config
    regexp="^#?PermitRootLogin"
    line="PermitRootLogin no"
  notify: restart sshd

- name: Don't allow password-based authentication via ssh
  lineinfile:
    dest=/etc/ssh/sshd_config
    regexp="^#?PasswordAuthentication"
    line="PasswordAuthentication no"
  notify: restart sshd
